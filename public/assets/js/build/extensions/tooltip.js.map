{"version":3,"sources":["extensions/tooltip.js"],"names":["$","fn","tooltip","Error","STATE_PARAM","bsTooltipGetOptions","Constructor","prototype","getOptions","bsTooltipSetContent","setContent","options","result","call","_isRtl","attr","placement","state","$element","tip","addClass","replace","jQuery"],"mappings":";;AAGA;AACA;;AAEA,CAAC,aAAK;AACJ;;AAEA,MAAI,CAACA,EAAEC,EAAF,CAAKC,OAAV,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,MAAMC,cAAc,YAApB;;AAEA,MAAMC,sBAAsBL,EAAEC,EAAF,CAAKC,OAAL,CAAaI,WAAb,CAAyBC,SAAzB,CAAmCC,UAA/D;AACA,MAAMC,sBAAsBT,EAAEC,EAAF,CAAKC,OAAL,CAAaI,WAAb,CAAyBC,SAAzB,CAAmCG,UAA/D;;AAEAV,IAAEC,EAAF,CAAKC,OAAL,CAAaI,WAAb,CAAyBC,SAAzB,CAAmCC,UAAnC,GAAgD,UAASG,OAAT,EAAkB;AAChE,QAAMC,SAASP,oBAAoBQ,IAApB,CAAyB,IAAzB,EAA+BF,OAA/B,CAAf;AACA,QAAMG,SAASd,EAAE,MAAF,EAAUe,IAAV,CAAe,KAAf,MAA0B,KAAzC;;AAEA,QAAID,UAAUF,OAAOI,SAAP,KAAqB,MAAnC,EAA2C;AACzCJ,aAAOI,SAAP,GAAmB,OAAnB;AACD,KAFD,MAEO,IAAIF,UAAUF,OAAOI,SAAP,KAAqB,OAAnC,EAA4C;AACjDJ,aAAOI,SAAP,GAAmB,MAAnB;AACD;;AAED,WAAOJ,MAAP;AACD,GAXD;;AAaAZ,IAAEC,EAAF,CAAKC,OAAL,CAAaI,WAAb,CAAyBC,SAAzB,CAAmCG,UAAnC,GAAgD,YAAW;AACzD,QAAMO,QAAQ,KAAKC,QAAL,CAAcH,IAAd,CAAmBX,WAAnB,CAAd;;AAEA,QAAIa,KAAJ,EAAW;AACTjB,QAAE,KAAKmB,GAAL,EAAF,EAAcC,QAAd,cAAkCH,MAAMI,OAAN,CAAc,eAAd,EAA+B,EAA/B,CAAlC;AACD;;AAEDZ,wBAAoBI,IAApB,CAAyB,IAAzB;AACD,GARD;AASD,CAlCD,EAkCGS,MAlCH","file":"extensions/tooltip.js","sourcesContent":["\n\n\n// Extensions / Tooltip\n// --------------------------------------------------\n\n($ => {\n  'use strict';\n\n  if (!$.fn.tooltip) {\n    throw new Error('tooltip.js required.');\n  }\n\n  const STATE_PARAM = 'data-state';\n\n  const bsTooltipGetOptions = $.fn.tooltip.Constructor.prototype.getOptions;\n  const bsTooltipSetContent = $.fn.tooltip.Constructor.prototype.setContent;\n\n  $.fn.tooltip.Constructor.prototype.getOptions = function(options) {\n    const result = bsTooltipGetOptions.call(this, options);\n    const _isRtl = $('html').attr('dir') === 'rtl';\n\n    if (_isRtl && result.placement === 'left') {\n      result.placement = 'right';\n    } else if (_isRtl && result.placement === 'right') {\n      result.placement = 'left';\n    }\n\n    return result;\n  };\n\n  $.fn.tooltip.Constructor.prototype.setContent = function() {\n    const state = this.$element.attr(STATE_PARAM);\n\n    if (state) {\n      $(this.tip()).addClass(`tooltip-${state.replace(/[^a-z0-9_-]/ig, '')}`);\n    }\n\n    bsTooltipSetContent.call(this);\n  };\n})(jQuery);\n"],"sourceRoot":"../src/"}