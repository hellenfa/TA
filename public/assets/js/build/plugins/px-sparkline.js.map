{"version":3,"sources":["plugins/px-sparkline.js"],"names":["PxSparkline","$","fn","sparkline","Error","NAME","DATA_KEY","EVENT_KEY","JQUERY_NO_CONFLICT","Event","RESIZE","DEFAULT_BAR_SPACING","PxSparklineCls","element","values","config","uniqueId","pxUtil","generateUniqueId","$parent","parentNode","wrap","document","createElement","appendChild","cloneNode","_initialHTML","innerHTML","update","_setListeners","_values","width","type","barSpacing","_config","extend","barWidth","_getBarWidth","length","_unsetListeners","removeData","insertAfter","remove","barsCount","spacer","span","parseInt","Math","floor","window","on","constructor","off","args","Object","prototype","toString","call","undefined","getAttribute","html","replace","split","each","data","method","_parseArgs","slice","destroy","_jQueryInterface","Constructor","noConflict","jQuery"],"mappings":"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","file":"plugins/px-sparkline.js","sourcesContent":["\n\n\n\n// Plugins / PxSparkline\n// --------------------------------------------------\n\nconst PxSparkline = (function($) {\n  'use strict';\n\n  if (!$.fn.sparkline) {\n    throw new Error('jquery.sparkline.js required.');\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  const NAME               = 'pxSparkline';\n  const DATA_KEY           = 'px.sparkline';\n  const EVENT_KEY          = `.${DATA_KEY}`;\n  const JQUERY_NO_CONFLICT = $.fn[NAME];\n\n  const Event = {\n    RESIZE: `resize${EVENT_KEY}`,\n  };\n\n  const DEFAULT_BAR_SPACING = '2px';\n\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  class PxSparklineCls {\n    constructor(element, values, config) {\n      this.uniqueId = pxUtil.generateUniqueId();\n\n      this.element = element;\n      this.$parent = $(element.parentNode);\n\n      // Get intial HTML\n      const wrap = document.createElement('div');\n\n      wrap.appendChild(this.element.cloneNode(true));\n      this._initialHTML = wrap.innerHTML;\n\n      this.update(values, config);\n\n      this._setListeners();\n    }\n\n    // getters\n\n    static get NAME() {\n      return NAME;\n    }\n\n    static get DATA_KEY() {\n      return DATA_KEY;\n    }\n\n    static get Event() {\n      return Event;\n    }\n\n    static get EVENT_KEY() {\n      return EVENT_KEY;\n    }\n\n    // public\n\n    update(values, config) {\n      if (values !== null) {\n        this._values = values;\n      }\n\n      if (config !== null) {\n        // Set defaults\n        if (config.width === '100%' && (config.type === 'bar' || config.type === 'tristate') && typeof config.barSpacing === 'undefined') {\n          config.barSpacing = DEFAULT_BAR_SPACING;\n        }\n\n        this.config  = config;\n      }\n\n      // Copy config\n      const _config = $.extend(true, {}, this.config);\n\n      if (_config.width === '100%') {\n        if (_config.type === 'bar' || _config.type === 'tristate') {\n          _config.barWidth = this._getBarWidth(this.$parent, this._values.length, _config.barSpacing);\n        } else {\n          _config.width = this.$parent.width();\n        }\n      }\n\n      $(this.element).sparkline(this._values, _config);\n    }\n\n    destroy() {\n      this._unsetListeners();\n      $(this.element).removeData(DATA_KEY);\n\n      // Remove html element\n      $(this._initialHTML).insertAfter(this.element);\n      $(this.element).remove();\n    }\n\n    // private\n\n    _getBarWidth($parent, barsCount, spacer) {\n      const width = $parent.width();\n      const span  = parseInt(spacer, 10) * (barsCount - 1);\n\n      return Math.floor((width - span) / barsCount);\n    }\n\n    _setListeners() {\n      $(window).on(`${this.constructor.Event.RESIZE}.${this.uniqueId}`, () => {\n        if (this.config.width !== '100%') { return; }\n\n        // Copy config\n        const _config = $.extend(true, {}, this.config);\n\n        if (_config.type === 'bar' || _config.type === 'tristate') {\n          _config.barWidth = this._getBarWidth(this.$parent, this._values.length, _config.barSpacing);\n        } else {\n          _config.width = this.$parent.width();\n        }\n\n        $(this.element).sparkline(this._values, _config);\n      });\n    }\n\n    _unsetListeners() {\n      $(window).off(`${this.constructor.Event.RESIZE}.${this.uniqueId}`);\n    }\n\n    // static\n\n    static _parseArgs(element, args) {\n      let values;\n      let config;\n\n      if (Object.prototype.toString.call(args[0]) === '[object Array]' || args[0] === 'html' || args[0] === null) {\n        values = args[0];\n        config = args[1] || null;\n      } else {\n        config = args[0] || null;\n      }\n\n      if ((values === 'html' || values === undefined) && values !== null) {\n        values = element.getAttribute('values');\n\n        if (values === undefined || values === null) {\n          values = $(element).html();\n        }\n\n        values = values.replace(/(^\\s*<!--)|(-->\\s*$)|\\s+/g, '').split(',');\n      }\n\n      if (!values || Object.prototype.toString.call(values) !== '[object Array]' || values.length === 0) {\n        values = null;\n      }\n\n      return { values, config };\n    }\n\n    static _jQueryInterface(...args) {\n      return this.each(function() {\n        let data     = $(this).data(DATA_KEY);\n        const method = (args[0] === 'update' || args[0] === 'destroy') ? args[0] : null;\n\n        const { values, config } = PxSparklineCls._parseArgs(this, method ? args.slice(1) : args);\n\n        if (!data) {\n          data = new PxSparklineCls(this, values || [], config || {});\n          $(this).data(DATA_KEY, data);\n        }\n\n        if (method === 'update') {\n          data.update(values, config);\n        } else if (method === 'destroy') {\n          data.destroy();\n        }\n      });\n    }\n  }\n\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME]             = PxSparklineCls._jQueryInterface;\n  $.fn[NAME].Constructor = PxSparklineCls;\n  $.fn[NAME].noConflict  = function() {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return PxSparklineCls._jQueryInterface;\n  };\n\n  return PxSparklineCls;\n})(jQuery);\n\n\n"],"sourceRoot":"../src/"}